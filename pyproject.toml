[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nevald-report-gen"
version = "0.1.0"
description = "Professional VALD ForceDecks Report Generator"
authors = [
    {name = "Next Era Performance Technology", email = "info@nexteraperformance.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["vald", "force-decks", "sports-science", "performance", "reports"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "pandas>=2.0.0",
    "matplotlib>=3.5.0",
    "reportlab>=4.0.0",
    "google-cloud-bigquery>=3.0.0",
    "google-auth>=2.0.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "scipy>=1.7.0",
    "numpy>=1.20.0",
    "pillow>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.15.0",
]
build = [
    "pyinstaller>=5.0.0",
    "auto-py-to-exe>=2.0.0",
]

[project.scripts]
vald-report-gen = "nevald_report_gen.desktop_app:main"

[project.urls]
Homepage = "https://github.com/nextera-performance/nevald-report-gen"
Repository = "https://github.com/nextera-performance/nevald-report-gen"
Issues = "https://github.com/nextera-performance/nevald-report-gen/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
nevald_report_gen = [
  "Media/*"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
